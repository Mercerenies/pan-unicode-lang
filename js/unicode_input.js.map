{
  "version": 3,
  "file": "unicode_input.js",
  "sourceRoot": "..",
  "sources": [
    "src/unicode_input.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nimport { spliceStr } from './util.js'\n\nexport class InputManager\n\n  constructor: () ->\n    @element = null\n    @handler = null\n    @downHandler = null\n    @translations = compileTranslationTable DEFAULT_TRANSLATION_TABLE\n    @currentTranslation = null\n    @currentString = \"\"\n    @currentPosition = 0\n\n  register: (element) ->\n    if @element?\n      this.unregister()\n    @element = element\n    @handler = (event) => this.onInput(event)\n    @downHandler = (event) => this.onKeyDown(event)\n    element.addEventListener('input', @handler)\n    element.addEventListener('keypress', @downHandler)\n    element.addEventListener('keydown', @downHandler)\n\n  unregister: () ->\n    if @element?\n      @element.removeEventListener('input', @handler)\n      @element.removeEventListener('keypress', @downHandler)\n      @element.removeEventListener('keydown', @downHandler)\n      @element = null\n      @handler = null\n      @downHandler = null\n\n  onKeyDown: (event) ->\n    if event.isComposing or event.keyCode == 229\n      # MDN says to do this :)\n      return\n    if event.keyCode == 13 and event.shiftKey\n      document.querySelector(\"#run-button\").click()\n      event.preventDefault()\n\n  onInput: (event) ->\n    if event.inputType == \"insertText\"\n      resolution = 0\n      tryToResolve = =>\n        return if resolution > 2\n        resolution += 1\n        if @currentTranslation == null\n          @currentTranslation = @translations\n          @currentPosition = event.target.selectionStart - 1\n        next = @currentTranslation[event.data]\n        @currentString += event.data\n        switch\n          when @currentPosition != event.target.selectionStart - 1\n            @currentTranslation = null\n            @currentString = \"\"\n            tryToResolve()\n          when typeof(next) == 'object'\n            if next[END]?\n              term = next[END]\n              @currentPosition = event.target.selectionStart\n              event.target.value =\n                spliceStr(event.target.value, term, @currentPosition - @currentString.length, @currentPosition)\n              event.target.selectionStart = @currentPosition - @currentString.length + term.length\n              event.target.selectionEnd = event.target.selectionStart\n              @currentString = term\n            @currentTranslation = next\n          else\n            @currentTranslation = null\n            @currentString = \"\"\n            tryToResolve()\n        @currentPosition = event.target.selectionStart\n      tryToResolve()\n    else\n      # In any other case, cancel the current translation\n      @currentTranslation = null\n      @currentString = \"\"\n\nexport END = Symbol(\"END\")\n\nexport compileTranslationTable = (table) ->\n  result = {}\n  for k, v of table\n    curr = result\n    for ch in k\n      curr[ch] ?= {}\n      curr = curr[ch]\n    curr[ END ] = v\n  result\n\nexport DEFAULT_TRANSLATION_TABLE =\n  \"\\\\o\": \"ø\"\n  \".-\": \"×\"\n  \"\\\\times\": \"×\"\n  \"\\\\x\": \"×\"\n  \".=\": \"÷\"\n  \"\\\\div\": \"÷\"\n  \"\\\\division\": \"÷\"\n  \".0\": \"∧\"\n  \"\\\\and\": \"∧\"\n  \"\\\\wedge\": \"∧\"\n  \".9\": \"∨\"\n  \"\\\\or\": \"∨\"\n  \"\\\\vee\": \"∨\"\n  \"\\\\.and\": \"⩑\"\n  \"\\\\.wedge\": \"⩑\"\n  \"\\\\lcm\": \"⩑\"\n  \"\\\\.or\": \"⩒\"\n  \"\\\\.vee\": \"⩒\"\n  \"\\\\gcd\": \"⩒\"\n  \"\\\\neg\": \"¬\"\n  \"\\\\lnot\": \"¬\"\n  \"\\\\o+\": \"⊕\"\n  \"\\\\oplus\": \"⊕\"\n  \"\\\\ox\": \"⊗\"\n  \"\\\\otimes\": \"⊗\"\n  \".7\": \"<\"\n  \".3\": \">\"\n  \".4\": \"≤\"\n  \"\\\\le\": \"≤\"\n  \"\\\\leq\": \"≤\"\n  \".6\": \"≥\"\n  \"\\\\ge\": \"≥\"\n  \"\\\\geq\": \"≥\"\n  \".8\": \"≠\"\n  \"\\\\ne\": \"≠\"\n  \"\\\\neq\": \"≠\"\n  \"._\": \"≡\"\n  \"\\\\equiv\": \"≡\"\n  \"\\\\eq\": \"≡\"\n  \"\\\\==\": \"≡\"\n  \".\\\"\": \"≢\"\n  \"\\\\nequiv\": \"≢\"\n  \"\\\\eqn\": \"≢\"\n  \"\\\\==n\": \"≢\"\n  \"\\\\fw\": \"⚐\"\n  \"\\\\epsilon\": \"ε\"\n  \"\\\\Ge\": \"ε\"\n  \"\\\\fb\": \"⚑\"\n  \".i\": \"⍳\"\n  \"\\\\iota\": \"⍳\"\n  \"\\\\Gi\": \"⍳\"\n  \".I\": \"⍸\"\n  \"\\\\iota_\": \"⍸\"\n  \"\\\\Gi_\": \"⍸\"\n  \".r\": \"⍴\"\n  \"\\\\rho\": \"⍴\"\n  \"\\\\Gr\": \"⍴\"\n  \".[\": \"←\"\n  \"\\\\<-\": \"←\"\n  \"\\\\leftarrow\": \"←\"\n  \"\\\\l-\": \"←\"\n  \"\\\\l\": \"←\"\n  \".]\": \"→\"\n  \"\\\\->\": \"→\"\n  \"\\\\rightarrow\": \"→\"\n  \"\\\\r-\": \"→\"\n  \"\\\\r\": \"→\"\n  \"\\\\to\": \"→\"\n  \"./\": \"⌿\"\n  \"\\\\filter\": \"⌿\"\n  \".1\": \"¨\"\n  \"\\\\map\": \"¨\"\n  \"\\\\\\\"\": \"¨\"\n  \"\\\\\\\"{}\": \"¨\"\n  \".e\": \"∈\"\n  \"\\\\in\": \"∈\"\n  \"\\\\member\": \"∈\"\n  \"\\\\ell\": \"ℓ\"\n  \"\\\\.e\": \"ė\"\n  \"\\\\.{e}\": \"ė\"\n  \"\\\\^e\": \"ê\"\n  \"\\\\^{e}\": \"ê\"\n  \"\\\\=i\": \"ī\"\n  \"\\\\={i}\": \"ī\"\n  \"\\\\tree\": \"🌳\"\n  \"\\\\log\": \"🌳\"\n  \"\\\\ln\": \"🌳\"\n  \"\\\\surd\": \"√\"\n  \"\\\\sqrt\": \"√\"\n  \"\\\\cib\": \"●\"\n  \"\\\\curry\": \"●\"\n  \"\\\\ciw\": \"○\"\n  \"\\\\compose\": \"○\"\n  \"\\\\cis\": \"◐\"\n  \"\\\\sin\": \"◐\"\n  \"\\\\cias\": \"◑\"\n  \"\\\\asin\": \"◑\"\n  \"\\\\cic\": \"◒\"\n  \"\\\\cos\": \"◒\"\n  \"\\\\ciac\": \"◓\"\n  \"\\\\acos\": \"◓\"\n  \"\\\\cit\": \"◔\"\n  \"\\\\tan\": \"◔\"\n  \"\\\\ciat\": \"◕\"\n  \"\\\\atan\": \"◕\"\n  \"\\\\cish\": \"◖\"\n  \"\\\\sinh\": \"◖\"\n  \"\\\\ciash\": \"◗\"\n  \"\\\\asinh\": \"◗\"\n  \"\\\\cich\": \"◌\"\n  \"\\\\cosh\": \"◌\"\n  \"\\\\ciach\": \"◍\"\n  \"\\\\acosh\": \"◍\"\n  \"\\\\cith\": \"◎\"\n  \"\\\\tanh\": \"◎\"\n  \"\\\\ciath\": \"◉\"\n  \"\\\\atanh\": \"◉\"\n  \"\\\\r-2\": \"⇉\"\n  \"\\\\rightrightarrows\": \"⇉\"\n  \"\\\\r\\\\/\": \"⤨\"\n  \"\\\\r/\\\\\": \"⤨\"\n  \"\\\\udr\": \"⤨\"\n  \"\\\\dur\": \"⤨\"\n  \"\\\\ur\": \"↗\"\n  \"\\\\ur-\": \"↗\"\n  \"\\\\nearrow\": \"↗\"\n  \"\\\\dr\": \"↘\"\n  \"\\\\dr-\": \"↘\"\n  \"\\\\searrow\": \"↘\"\n  \".`\": \"⋄\"\n  \"\\\\dio\": \"⋄\"\n  \"\\\\diamond\": \"⋄\"\n  \"\\\\speech\": \"💬\"\n  \"\\\\chr\": \"💬\"\n  \"\\\\ord\": \"💬\"\n  \"\\\\scroll\": \"📜\"\n  \"\\\\read\": \"📜\"\n  \"\\\\book\": \"📖\"\n  \"\\\\readln\": \"📖\"\n  \"\\\\books\": \"📚\"\n  \"\\\\readall\": \"📚\"\n  \"\\\\slurp\": \"📚\"\n  \".X\": \"⊇\"\n  \"\\\\sup=\": \"⊇\"\n  \"\\\\supseteq\": \"⊇\"\n  \"\\\\supseteqq\": \"⊇\"\n  \".Z\": \"⊆\"\n  \"\\\\sub=\": \"⊆\"\n  \"\\\\subseteq\": \"⊆\"\n  \"\\\\subseteqq\": \"⊆\"\n  \".x\": \"⊃\"\n  \"\\\\sup\": \"⊃\"\n  \"\\\\supset\": \"⊃\"\n  \"\\\\supset\": \"⊃\"\n  \".z\": \"⊂\"\n  \"\\\\sub\": \"⊂\"\n  \"\\\\subset\": \"⊂\"\n  \"\\\\subset\": \"⊂\"\n  \".$\": \"⍋\"\n  \"\\\\gradeup\": \"⍋\"\n  \"\\\\sort\": \"⍋\"\n  \"\\\\forkandknife\": \"🍴\"\n  \"\\\\chomp\": \"🍴\"\n  \".<\": \"⍪\"\n  \"\\\\ravel\": \"⍪\"\n  \"\\\\flatten\": \"⍪\"\n  \"\\\\?\": \"¿\"\n  \"?`\": \"¿\"\n  \"r`\": \"ɹ\"\n  \"\\\\r`\": \"ɹ\"\n  \"\\\\rev\": \"ɹ\"\n  \"\\\\reverse\": \"ɹ\"\n  \"\\\\::\": \"∷\"\n  \".s\": \"⌈\"\n  \"\\\\lceil\": \"⌈\"\n  \"\\\\cul\": \"⌉\"\n  \"\\\\rceil\": \"⌉\"\n  \"\\\\cur\": \"⌉\"\n  \".d\": \"⌊\"\n  \"\\\\lfloor\": \"⌊\"\n  \"\\\\cll\": \"⌊\"\n  \"\\\\cl\": \"⌊\"\n  \"\\\\rfloor\": \"⌋\"\n  \"\\\\clr\": \"⌋\"\n  \"\\\\cr\": \"⌋\"\n  \"\\\\inf\": \"∞\"\n  \"\\\\infty\": \"∞\"\n  \"\\\\infinity\": \"∞\"\n  \"\\\\nan\": \"👿\"\n  \"\\\\devil\": \"👿\"\n  \"\\\\pi\": \"π\"\n  \"\\\\tau\": \"τ\"\n  \"\\\\Gt\": \"τ\"\n  \"\\\\Tl\": \"◁\"\n  \"\\\\triangleleft\": \"◁\"\n  \"\\\\take\": \"◁\"\n  \"\\\\takel\": \"◁\"\n  \"\\\\Tr\": \"▷\"\n  \"\\\\triangleright\": \"▷\"\n  \"\\\\taker\": \"▷\"\n  \"\\\\Tlb\": \"⧏\"\n  \"\\\\triangleleftbar\": \"⧏\"\n  \"\\\\drop\": \"⧏\"\n  \"\\\\dropl\": \"⧏\"\n  \"\\\\Trb\": \"⧐\"\n  \"\\\\dropr\": \"⧐\"\n  \"\\\\Trianglerightbar\": \"⧐\"\n  \"\\\\triangleleftblack\": \"◂\"\n  \"\\\\takew\": \"◂\"\n  \"\\\\takewl\": \"◂\"\n  \"\\\\tr\": \"▸\"\n  \"\\\\trianglerightblack\": \"▸\"\n  \"\\\\takewr\": \"▸\"\n  \"\\\\tlb\": \"◄\"\n  \"\\\\Triangleleftblack\": \"◄\"\n  \"\\\\dropw\": \"◄\"\n  \"\\\\dropwl\": \"◄\"\n  \"\\\\trb\": \"►\"\n  \"\\\\dropwr\": \"►\"\n  \"\\\\Trianglerightblack\": \"►\"\n  \"\\\\scream\": \"😱\"\n  \"\\\\throw\": \"😱\"\n  \"\\\\panic\": \"😱\"\n  \"\\\\error\": \"😱\"\n  \"\\\\empty\": \"🗋\"\n  \"\\\\blank\": \"🗋\"\n  \"\\\\paragraph\": \"¶\"\n  \"\\\\P\": \"¶\"\n  \"\\\\pilcrow\": \"¶\"\n  \"\\\\split\": \"¶\"\n  \"\\\\P`\": \"⁋\"\n  \"\\\\rpilcrow\": \"⁋\"\n  \"\\\\worclip\": \"⁋\"\n  \"\\\\join\": \"⁋\"\n  \"\\\\\\\\\": \"\\\\\"\n  \"\\\\flqq\": \"«\"\n  \"\\\\\\\"<\": \"«\"\n  \"\\\\frqq\": \"»\"\n  \"\\\\\\\">\": \"»\"\n  \"\\\\varprime\": \"′\"\n  \"\\\\prime\": \"′\"\n  \"\\\\'\": \"′\"\n  \"\\\\(0)\": \"⓪\"\n  \"\\\\(1)\": \"①\"\n  \"\\\\(2)\": \"②\"\n  \"\\\\(3)\": \"③\"\n  \"\\\\(4)\": \"④\"\n  \"\\\\(5)\": \"⑤\"\n  \"\\\\(6)\": \"⑥\"\n  \"\\\\(7)\": \"⑦\"\n  \"\\\\(8)\": \"⑧\"\n  \"\\\\(9)\": \"⑨\"\n  \"\\\\(10)\": \"⑩\"\n  \"\\\\(11)\": \"⑪\"\n  \"\\\\(12)\": \"⑫\"\n  \"\\\\(13)\": \"⑬\"\n  \"\\\\(14)\": \"⑭\"\n  \"\\\\(15)\": \"⑮\"\n  \"\\\\(16)\": \"⑯\"\n  \"\\\\(17)\": \"⑰\"\n  \"\\\\(18)\": \"⑱\"\n  \"\\\\(19)\": \"⑲\"\n  \"\\\\(20)\": \"⑳\"\n  \"_0\": \"₀\"\n  \"_1\": \"₁\"\n  \"_2\": \"₂\"\n  \"_3\": \"₃\"\n  \"_4\": \"₄\"\n  \"_5\": \"₅\"\n  \"_6\": \"₆\"\n  \"_7\": \"₇\"\n  \"_8\": \"₈\"\n  \"_9\": \"₉\"\n  \"^0\": \"⁰\"\n  \"^1\": \"¹\"\n  \"^2\": \"²\"\n  \"^3\": \"³\"\n  \"^4\": \"⁴\"\n  \"^5\": \"⁵\"\n  \"^6\": \"⁶\"\n  \"^7\": \"⁷\"\n  \"^8\": \"⁸\"\n  \"^9\": \"⁹\"\n  \"1/\": \"⅟\"\n  \"1/4\": \"¼\"\n  \"1/2\": \"½\"\n  \"3/4\": \"¾\"\n  \"1/7\": \"⅐\"\n  \"1/9\": \"⅑\"\n  \"1/10 \": \"⅒\"\n  \"1/3\": \"⅓\"\n  \"2/3\": \"⅔\"\n  \"1/5\": \"⅕\"\n  \"2/5\": \"⅖\"\n  \"3/5\": \"⅗\"\n  \"4/5\": \"⅘\"\n  \"1/6\": \"⅙\"\n  \"5/6\": \"⅚\"\n  \"1/8\": \"⅛\"\n  \"3/8\": \"⅜\"\n  \"5/8\": \"⅝\"\n  \"7/8\": \"⅞\"\n  \"0/3\": \"↉\"\n"
  ]
}