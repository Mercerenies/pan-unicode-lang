{
  "version": 3,
  "file": "comparison.js",
  "sourceRoot": "..",
  "sources": [
    "src/comparison.coffee"
  ],
  "names": [],
  "mappings": ";AACA,OAAA;EAAS,aAAT;EAAwB,QAAxB;EAAkC,SAAlC;EAA6C,SAA7C;EAAwD,GAAxD;EAA6D,QAA7D;EAAuE,OAAvE;CAAA,MAAA;;AACA,OAAA;EAAS,kBAAT;CAAA,MAAA;;AAEA,OAAA,IAAO,QAAA,GACL;EAAA,EAAA,EAAI,CAAC,CAAL;EACA,EAAA,EAAK,CADL;EAEA,EAAA,EAAK;AAFL;;AAIF,OAAA,IAAO,UAAA,GAAa,QAAA,CAAC,CAAD,CAAA;SAClB,IAAI,CAAC,IAAL,CAAU,CAAV;AADkB,EARpB;;;;AAaA,OAAA,IAAO,MAAA,GAAS,QAAA,CAAC,CAAD,EAAI,CAAJ,CAAA;EACd,IAAe,CAAA,KAAK,CAApB;AAAA,WAAO,KAAP;;EACA,IAAG,CAAA,YAAa,aAAb,IAA+B,CAAA,YAAa,aAA/C;IACE,IAAe,CAAC,CAAC,IAAI,CAAC,QAAP,CAAA,CAAA,KAAqB,CAAC,CAAC,IAAI,CAAC,QAAP,CAAA,CAApC;AAAA,aAAO,KAAP;KADF;;EAEA,IAAG,CAAA,YAAa,QAAb,IAA0B,CAAA,YAAa,QAA1C;IACE,IAAe,OAAA,CAAQ,CAAC,CAAC,IAAV,EAAgB,CAAC,CAAC,IAAlB,EAAwB,MAAxB,CAAf;AAAA,aAAO,KAAP;KADF;;EAEA,IAAG,CAAA,YAAa,SAAb,IAA2B,CAAA,YAAa,SAA3C;IACE,IAAe,CAAC,CAAC,IAAI,CAAC,QAAP,CAAA,CAAA,KAAqB,CAAC,CAAC,IAAI,CAAC,QAAP,CAAA,CAApC;AAAA,aAAO,KAAP;KADF;;EAEA,IAAG,CAAA,YAAa,SAAb,IAA2B,CAAA,YAAa,SAA3C;IACE,IAAe,CAAC,CAAC,KAAF,KAAW,CAAC,CAAC,KAA5B;AAAA,aAAO,KAAP;KADF;;EAEA,IAAG,CAAA,YAAa,GAAb,IAAqB,CAAA,YAAa,GAArC;IACE,IAAe,MAAA,CAAO,CAAC,CAAC,KAAT,EAAgB,CAAC,CAAC,KAAlB,CAAf;AAAA,aAAO,KAAP;KADF;;SAEA;AAZc,EAbhB;;;;AA6BA,OAAA,IAAO,OAAA,GAAU,QAAA,CAAC,CAAD,EAAI,CAAJ,CAAA;AACjB,MAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA;AAAE,UAAA,KAAA;AAAA,WACO,OAAO,CAAP,KAAa,QAAb,IAA0B,OAAO,CAAP,KAAa,SAD9C;aAEI,UAAA,CAAW,CAAA,GAAI,CAAf;AAFJ,WAGO,CAAA,YAAa,SAAb,IAA2B,CAAA,YAAa,UAH/C;aAII,UAAA,CAAW,CAAC,CAAC,KAAF,GAAU,CAAC,CAAC,KAAvB;AAJJ,WAKO,CAAA,YAAa,QAAb,IAA0B,CAAA,YAAa,SAL9C;MAMI,KAAS,6GAAT;QACE,MAAA,GAAS,OAAA,CAAQ,CAAC,CAAC,IAAI,CAAC,CAAD,CAAd,EAAmB,CAAC,CAAC,IAAI,CAAC,CAAD,CAAzB;QACT,IAAiB,MAAA,KAAU,QAAQ,CAAC,EAApC;AAAA,iBAAO,OAAP;;MAFF;aAGA,OAAA,CAAQ,CAAC,CAAC,MAAM,CAAE,CAAC,CAAC,MAApB;AATJ,WAUO,CAAA,YAAa,SAAb,IAA2B,CAAA,YAAa,UAV/C;MAWI,CAAA,GAAI,CAAC,CAAC,IAAI,CAAC,QAAP,CAAA;MACJ,CAAA,GAAI,CAAC,CAAC,IAAI,CAAC,QAAP,CAAA;AACJ,cAAA,KAAA;AAAA,eACO,CAAA,GAAI,EADX;iBACkB,QAAQ,CAAC;AAD3B,eAEO,CAAA,GAAI,EAFX;iBAEkB,QAAQ,CAAC;AAF3B;iBAGkB,QAAQ,CAAC;AAH3B;;AAbJ,WAiBO,CAAA,YAAa,GAAb,IAAqB,CAAA,YAAa,IAjBzC;aAkBI,OAAA,CAAQ,CAAC,CAAC,KAAV,EAAiB,CAAC,CAAC,KAAnB;AAlBJ;MAoBI,MAAM,IAAI,kBAAJ,CAAuB,CAAvB,EAA0B,CAA1B;AApBV;AADe;;AAuBjB,OAAA,IAAO,SAAA,GAAY,QAAA,CAAC,CAAD,EAAI,CAAJ,CAAA;SACjB,OAAA,CAAQ,CAAR,EAAW,CAAX,CAAA,KAAiB,QAAQ,CAAC;AADT;;AAGnB,OAAA,IAAO,QAAA,GAAW,QAAA,CAAC,KAAD,EAAQ,EAAR,CAAA;SAChB,QAAA,CAAC,CAAD,EAAI,CAAJ,CAAA;IACE,KAAK,CAAC,IAAN,CAAW,CAAX,EAAc,CAAd;IACA,OAAA,CAAQ,EAAR,EAAY,KAAZ;WACA,QAAA,CAAS,KAAK,CAAC,GAAN,CAAA,CAAT;EAHF;AADgB",
  "sourcesContent": [
    "\nimport { SentinelValue, ArrayLit, StringLit, NumberLit, Box, isTruthy, tryCall } from './ast.js'\nimport { IncomparableValues } from './error.js'\n\nexport Ordering =\n  LT: -1\n  EQ:  0\n  GT:  1\n\nexport toOrdering = (n) ->\n  Math.sign(n)\n\n# Note: Equality will never produce an error. Comparing values of\n# different types simply returns false.\nexport equals = (a, b) ->\n  return true if a == b\n  if a instanceof SentinelValue and b instanceof SentinelValue\n    return true if a.type.toString() == b.type.toString()\n  if a instanceof ArrayLit and b instanceof ArrayLit\n    return true if arrayEq(a.data, b.data, equals)\n  if a instanceof StringLit and b instanceof StringLit\n    return true if a.text.toString() == b.text.toString()\n  if a instanceof NumberLit and b instanceof NumberLit\n    return true if a.value == b.value\n  if a instanceof Box and b instanceof Box\n    return true if equals(a.value, b.value)\n  false\n\n# Unlike equality, comparison WILL throw an error if given\n# incompatible types.\nexport compare = (a, b) ->\n  switch\n    when typeof(a) == 'number' and typeof(b) == 'number'\n      toOrdering(a - b)\n    when a instanceof NumberLit and b instanceof NumberLit\n      toOrdering(a.value - b.value)\n    when a instanceof ArrayLit and b instanceof ArrayLit\n      for i in [0..Math.min(a.length, b.length)-1]\n        result = compare(a.data[i], b.data[i])\n        return result if result != Ordering.EQ\n      compare(a.length. b.length)\n    when a instanceof StringLit and b instanceof StringLit\n      a = a.text.toString()\n      b = b.text.toString()\n      switch\n        when a < b then Ordering.LT\n        when a > b then Ordering.GT\n        else            Ordering.EQ\n    when a instanceof Box and b instanceof Box\n      compare(a.value, b.value)\n    else\n      throw new IncomparableValues(a, b)\n\nexport defaultLT = (x, y) ->\n  compare(x, y) == Ordering.LT\n\nexport customLT = (state, fn) ->\n  (x, y) ->\n    state.push(x, y)\n    tryCall(fn, state)\n    isTruthy(state.pop())\n"
  ]
}